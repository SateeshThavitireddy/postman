{
	"info": {
		"_postman_id": "e63727c5-548b-44e4-b170-725087dd19db",
		"name": "ReQres.in",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33934284",
		"_collection_link": "https://thavitireddy.postman.co/workspace/Thavitireddy-Workspace~e906ef7f-7180-4ec6-adeb-790fa6fed569/collection/33934284-e63727c5-548b-44e4-b170-725087dd19db?action=share&source=collection_link&creator=33934284"
	},
	"item": [
		{
			"name": "Register - successful User",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base Url}}register",
					"host": [
						"{{Base Url}}register"
					]
				}
			},
			"response": []
		},
		{
			"name": "UnSuccessful Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify the error message\",function(){\r",
							"    pm.response.to.have.status(400);\r",
							"    var jsonDate = pm.response.json();\r",
							"    pm.expect(jsonDate.error).to.eql(\"Missing password\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"sydney@fife\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base Url}}register",
					"host": [
						"{{Base Url}}register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"verify the user details\",function(){\r",
							"    pm.response.to.have.status(201);\r",
							"    var json = pm.response.json();\r",
							"\r",
							"    console.log(\"Response Data\",json);\r",
							"    \r",
							"    pm.expect(json).to.have.property(\"email\",\"eve.holt@reqres.in\");\r",
							"    pm.expect(json).to.have.property(\"password\",\"cityslicka\");\r",
							"\r",
							"    \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base Url}}}login",
					"host": [
						"{{Base Url}}}login"
					]
				}
			},
			"response": []
		},
		{
			"name": "create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify the User is created\",function(){\r",
							"    pm.response.to.have.status(201);\r",
							"\r",
							"    var json = pm.response.json();\r",
							"    pm.expect(json).to.have.property(\"name\",\"morpheus\");\r",
							"    pm.expect(json).to.have.property(\"job\",\"leader\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base Url}}users",
					"host": [
						"{{Base Url}}users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"\",function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    var json =  pm.response.json();\r",
							"    pm.expect(json).to.have.property(\"name\",\"morpheus\");  \r",
							"     pm.expect(json).to.have.property(\"job\",\"zion resident\"); \r",
							"          \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base Url}}users/2",
					"host": [
						"{{Base Url}}users"
					],
					"path": [
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "get User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"verify the user details\",function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    var json = pm.response.json();\r",
							"\r",
							"    pm.expect(json.data).property(\"email\",\"janet.weaver@reqres.in\");\r",
							"    pm.expect(json.data).property(\"first_name\",\"Janet\");\r",
							"    console.log(json.data.first_name);\r",
							"    pm.expect(json.data).property(\"last_name\",\"Weaver\");\r",
							"    pm.expect(json.support).property(\"text\",\"Tired of writing endless social media content? Let Content Caddy generate it for you.\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base Url}}users/2",
					"host": [
						"{{Base Url}}users"
					],
					"path": [
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify the user is deleted\",function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base Url}}users/1",
					"host": [
						"{{Base Url}}users"
					],
					"path": [
						"1"
					]
				}
			},
			"response": []
		}
	]
}